/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.classDatosEmpresa;
import clases.classUsuario;
import herramientas.conexion;
import herramientas.globales;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import org.w3c.dom.*;
import javax.xml.parsers.*;
import javax.xml.transform.*;
import javax.xml.transform.dom.*;
import javax.xml.transform.stream.*;

/**
 *
 * @author julio
 */
public class frmLogueo extends javax.swing.JFrame {

    /**
     * Creates new form frmLogueo
     */

    public static frmPrincipal principal= new frmPrincipal();
    public frmLogueo() {
        
        initComponents();
        try {
        for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
        } catch (Exception e) {
            // If Nimbus is not available, you can set the GUI to another look and feel.
        }
        leerConfiguracion();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        lblServidor = new javax.swing.JLabel();
        txtServer = new javax.swing.JTextField();
        lblUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblContraseña = new javax.swing.JLabel();
        cmdAccesar = new javax.swing.JButton();
        pswContraseña = new javax.swing.JPasswordField();
        lblBase = new javax.swing.JLabel();
        txtBase = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setLocationByPlatform(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/secure-server-px-png.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 130, 170));

        lblServidor.setBackground(new java.awt.Color(204, 204, 204));
        lblServidor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblServidor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblServidor.setText("SERVIDOR");
        lblServidor.setToolTipText("");
        getContentPane().add(lblServidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 209, 160, -1));
        getContentPane().add(txtServer, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 232, 160, -1));

        lblUsuario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsuario.setText("USUARIO");
        getContentPane().add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 326, 160, -1));
        getContentPane().add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 355, 160, -1));

        lblContraseña.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblContraseña.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContraseña.setText("CONTRASEÑA");
        getContentPane().add(lblContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 386, 160, -1));

        cmdAccesar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmdAccesar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LLAVE.png"))); // NOI18N
        cmdAccesar.setText("ACCESAR");
        cmdAccesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAccesarActionPerformed(evt);
            }
        });
        getContentPane().add(cmdAccesar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, 160, 56));
        getContentPane().add(pswContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 414, 160, -1));

        lblBase.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblBase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBase.setText("BASE DE DATOS");
        lblBase.setToolTipText("");
        getContentPane().add(lblBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 263, 160, -1));
        getContentPane().add(txtBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 286, 160, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondon.png"))); // NOI18N
        jLabel1.setLabelFor(this);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -100, 400, 630));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdAccesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAccesarActionPerformed
        try {
     
            crearXML2();
            
            conexion con = new conexion();
            con.strServidor=this.txtServer.getText();
            con.strPSWSQL="";
            con.strUsuarioSQL="root";
            con.strBaseDeDatos=this.txtBase.getText();
            
            String datosUsuario[]=new String [6];
         
            con.conectado();
            leerConfiguracion();
            
            classUsuario usuarios = new classUsuario();
            if (usuarios.blnChecaUsuarioContra("SELECT * FROM Usuarios "
                    + "where Usuario='"+
                    this.txtUsuario.getText() +"' and Contra='"
                    +this.pswContraseña.getText()+"'")==true){
                this.setVisible(false);
                
               classUsuario u= new classUsuario();
               datosUsuario=u.leerUsuario(this.txtUsuario.getText());
                
                globales.lngIDGrupo=Long.valueOf(datosUsuario[5]);
                globales.obtenerDerechosGrupo();
                
                //DATOS DE LA EMPRESA
                classDatosEmpresa datosEmpresa = new classDatosEmpresa();
                datosEmpresa.leerEmpresa();
                
                globales.gstrCiudad=datosEmpresa.strCiudad;
                globales.gstrDireccion=datosEmpresa.Direccion;
                globales.gstrEstado=datosEmpresa.Estado;
                globales.gstrNombre=datosEmpresa.Nombre;
                globales.gstrPais=datosEmpresa.Pais;
                globales.gstrRFC=datosEmpresa.RFC;
                globales.gstrRazonSocial=datosEmpresa.RazonSocial;
                globales.gstrTelefono=datosEmpresa.Telefono;
                
                
                principal.ejecutarDerecho();
                principal.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(null, "USUARIO O CONTRASEÑA INCORRECTO ");
                  //System.out.println("SELECT * FROM Usuarios where Usuario='"+this.txtUsuario.getText() +"' and Contra='"+this.pswContraseña.getText()+"'");
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(frmLogueo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(frmLogueo.class.getName()).log(Level.SEVERE, null, ex);
        }
       
                
    }//GEN-LAST:event_cmdAccesarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frmLogueo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frmLogueo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frmLogueo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frmLogueo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new frmLogueo().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAccesar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblBase;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblServidor;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPasswordField pswContraseña;
    private javax.swing.JTextField txtBase;
    private javax.swing.JTextField txtServer;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables


public void crearXML2() throws ParserConfigurationException, TransformerConfigurationException, TransformerException{
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    DocumentBuilder builder = factory.newDocumentBuilder();
    DOMImplementation implementation = builder.getDOMImplementation();
    
    Document document = implementation.createDocument(null, "Configuracion", null);
    document.setXmlVersion("1.0");
    
    Element raiz = document.getDocumentElement();
    
    Element nodoServidor = document.createElement("Servidor"); //creamos un nuevo elemento
    Text nodoValorServidor = document.createTextNode(this.txtServer.getText()); //Ingresamos la info				
    nodoServidor.appendChild(nodoValorServidor); 						
    raiz.appendChild(nodoServidor); //pegamos el elemento a la raiz "Documento"
    
    Element nododb = document.createElement("DB"); //creamos un nuevo elemento
    Text nodoValorDB = document.createTextNode(this.txtBase.getText()); //Ingresamos la info				
    nododb.appendChild(nodoValorDB); 						
    raiz.appendChild(nododb); //pegamos el elemento a la raiz "Documento"
    
    Element nodoUsuario = document.createElement("Usuario"); //creamos un nuevo elemento
    Text nodoValorUsuario = document.createTextNode(this.txtUsuario.getText()); //Ingresamos la info				
    nodoUsuario.appendChild(nodoValorUsuario); 						
    raiz.appendChild(nodoUsuario); //pegamos el elemento a la raiz "Documento"
    
    
    Source source = new DOMSource(document);
    StreamResult result = new StreamResult(new java.io.File("Conexion.xml"));//nombre del archivo
    Transformer transformer = TransformerFactory.newInstance().newTransformer();
    transformer.transform(source, result);
}
    
    public void leerConfiguracion(){
        try{
    File fXmlFile = new File("Conexion.xml");
    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
    DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
    Document doc = dBuilder.parse(fXmlFile);

    //optional, but recommended
    //read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
    doc.getDocumentElement().normalize();

    System.out.println("Root element :" + doc.getDocumentElement().getNodeName());

    NodeList nList = doc.getElementsByTagName("Configuracion");

    System.out.println("----------------------------");

    for (int temp = 0; temp < nList.getLength(); temp++) {

        Node nNode = nList.item(temp);

        System.out.println("\nCurrent Element :" + nNode.getNodeName());

        if (nNode.getNodeType() == Node.ELEMENT_NODE) {

            Element eElement = (Element) nNode;
 
            this.txtServer.setText( eElement.getElementsByTagName("Servidor").item(0).getTextContent());
            this.txtBase.setText(eElement.getElementsByTagName("DB").item(0).getTextContent());
            this.txtUsuario.setText(eElement.getElementsByTagName("Usuario").item(0).getTextContent());
        }
    }
    } catch (Exception e) {
    e.printStackTrace();
    }
  }

    


}
